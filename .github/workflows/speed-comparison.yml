name: "Speed Comparison"

on:
  workflow_dispatch:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'

jobs:
  # Build the action first
  build:
    name: Build Action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Build Action
        run: npm run build

  # Test our action performance
  test-our-action:
    name: Our Action (${{ matrix.platform }})
    needs: build
    strategy:
      fail-fast: false
      matrix:
        include:
          # Test on Linux platforms for speed comparison (official action only supports Linux)
          - os: ubuntu-latest
            runner-os: Linux
            platform: "🐧 Linux (AMD64)"
          - os: ubuntu-24.04-arm
            runner-os: Linux
            platform: "🐧 Linux (ARM64)"
    
    runs-on: ${{ matrix.os }}
    
    outputs:
      linux-amd64-time: ${{ steps.linux-amd64-result.outputs.time }}
      linux-arm64-time: ${{ steps.linux-arm64-result.outputs.time }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Test Our Action with Timing
        run: |
          echo "::group::${{ matrix.platform }} - Our Action Performance Test"
          start_time=$(date +%s%N)
          echo "START_TIME=$start_time" >> $GITHUB_ENV
        shell: bash
        
      - name: Run Our Action
        uses: ./
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-client-secret: ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}
          tags: "tag:ci"
          version: "1.82.0"
          use-cache: true
          timeout: "3m"
          retry: 3
          
      - name: Calculate Our Action Time
        id: calculate-time
        run: |
          end_time=$(date +%s%N)
          duration=$(( (end_time - START_TIME) / 1000000 ))
          echo "duration=${duration}" >> $GITHUB_OUTPUT
          echo "::notice::${{ matrix.platform }} - Our action completed in ${duration}ms"
          echo "::endgroup::"
        shell: bash
        
      # Set platform-specific outputs
      - name: Set Linux AMD64 Result
        id: linux-amd64-result
        if: matrix.os == 'ubuntu-latest'
        run: echo "time=${{ steps.calculate-time.outputs.duration }}" >> $GITHUB_OUTPUT
        
      - name: Set Linux ARM64 Result
        id: linux-arm64-result
        if: matrix.os == 'ubuntu-24.04-arm'
        run: echo "time=${{ steps.calculate-time.outputs.duration }}" >> $GITHUB_OUTPUT

  # Test official Tailscale action performance
  test-official-action:
    name: Official Action (${{ matrix.platform }})
    needs: build
    strategy:
      fail-fast: false
      matrix:
        include:
          # Test on Linux platforms for speed comparison (official action only supports Linux)
          - os: ubuntu-latest
            runner-os: Linux
            platform: "🐧 Linux (AMD64)"
          - os: ubuntu-24.04-arm
            runner-os: Linux
            platform: "🐧 Linux (ARM64)"
    
    runs-on: ${{ matrix.os }}
    
    outputs:
      linux-amd64-time: ${{ steps.linux-amd64-result.outputs.time }}
      linux-arm64-time: ${{ steps.linux-arm64-result.outputs.time }}
    
    steps:
      - name: Test Official Action with Timing
        run: |
          echo "::group::${{ matrix.platform }} - Official Action Performance Test"
          start_time=$(date +%s%N)
          echo "START_TIME=$start_time" >> $GITHUB_ENV
        shell: bash
        
      - name: Run Official Action
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}
          tags: "tag:ci"
          version: "1.82.0"
          
      - name: Calculate Official Action Time
        id: calculate-time
        run: |
          end_time=$(date +%s%N)
          duration=$(( (end_time - START_TIME) / 1000000 ))
          echo "duration=${duration}" >> $GITHUB_OUTPUT
          echo "::notice::${{ matrix.platform }} - Official action completed in ${duration}ms"
          echo "::endgroup::"
        shell: bash
        
      # Set platform-specific outputs
      - name: Set Linux AMD64 Result
        id: linux-amd64-result
        if: matrix.os == 'ubuntu-latest'
        run: echo "time=${{ steps.calculate-time.outputs.duration }}" >> $GITHUB_OUTPUT
        
      - name: Set Linux ARM64 Result
        id: linux-arm64-result
        if: matrix.os == 'ubuntu-24.04-arm'
        run: echo "time=${{ steps.calculate-time.outputs.duration }}" >> $GITHUB_OUTPUT

  # Aggregate results and post summary
  summary:
    name: Performance Summary
    needs: [test-our-action, test-official-action]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Performance Summary
        run: |
          echo "## 🏁 Speed Comparison Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Comparing our action against the official Tailscale action (Linux only - official action limitation)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Platform | Our Action | Official Action | Performance |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|------------|-----------------|-------------|" >> $GITHUB_STEP_SUMMARY
          
          # Linux AMD64 comparison
          our_linux_amd64="${{ needs.test-our-action.outputs.linux-amd64-time }}"
          official_linux_amd64="${{ needs.test-official-action.outputs.linux-amd64-time }}"
          if [[ -n "$our_linux_amd64" && -n "$official_linux_amd64" ]]; then
            if [ "$our_linux_amd64" -lt "$official_linux_amd64" ]; then
              improvement=$(( official_linux_amd64 - our_linux_amd64 ))
              percentage=$(( improvement * 100 / official_linux_amd64 ))
              echo "| 🐧 Linux AMD64 | ${our_linux_amd64}ms | ${official_linux_amd64}ms | ✅ ${improvement}ms (${percentage}%) faster |" >> $GITHUB_STEP_SUMMARY
            elif [ "$our_linux_amd64" -gt "$official_linux_amd64" ]; then
              regression=$(( our_linux_amd64 - official_linux_amd64 ))
              percentage=$(( regression * 100 / our_linux_amd64 ))
              echo "| 🐧 Linux AMD64 | ${our_linux_amd64}ms | ${official_linux_amd64}ms | ⚠️ ${regression}ms (${percentage}%) slower |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| 🐧 Linux AMD64 | ${our_linux_amd64}ms | ${official_linux_amd64}ms | 🤝 Similar performance |" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "| 🐧 Linux AMD64 | ${our_linux_amd64:-N/A}ms | ${official_linux_amd64:-N/A}ms | ❌ Test failed |" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Linux ARM64 comparison
          our_linux_arm64="${{ needs.test-our-action.outputs.linux-arm64-time }}"
          official_linux_arm64="${{ needs.test-official-action.outputs.linux-arm64-time }}"
          if [[ -n "$our_linux_arm64" && -n "$official_linux_arm64" ]]; then
            if [ "$our_linux_arm64" -lt "$official_linux_arm64" ]; then
              improvement=$(( official_linux_arm64 - our_linux_arm64 ))
              percentage=$(( improvement * 100 / official_linux_arm64 ))
              echo "| 🐧 Linux ARM64 | ${our_linux_arm64}ms | ${official_linux_arm64}ms | ✅ ${improvement}ms (${percentage}%) faster |" >> $GITHUB_STEP_SUMMARY
            elif [ "$our_linux_arm64" -gt "$official_linux_arm64" ]; then
              regression=$(( our_linux_arm64 - official_linux_arm64 ))
              percentage=$(( regression * 100 / our_linux_arm64 ))
              echo "| 🐧 Linux ARM64 | ${our_linux_arm64}ms | ${official_linux_arm64}ms | ⚠️ ${regression}ms (${percentage}%) slower |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| 🐧 Linux ARM64 | ${our_linux_arm64}ms | ${official_linux_arm64}ms | 🤝 Similar performance |" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "| 🐧 Linux ARM64 | ${our_linux_arm64:-N/A}ms | ${official_linux_arm64:-N/A}ms | ❌ Test failed |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
