# Copyright (c) 2021 Tailscale Inc & AUTHORS All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.
name: 'Connect Tailscale'
description: 'Connect your GitHub Action workflow to Tailscale'
branding:
  icon: 'arrow-right-circle'
  color: 'gray-dark'
inputs:
  authkey:
    description: 'Your Tailscale authentication key, from the admin panel.'
    required: true
  version:
    description: 'Tailscale version to use.'
    required: true
    default: '1.32.1'
  args:
    description: 'Optional additional arguments to `tailscale up`'
    required: false
    default: ''
  tailscaled-args:
    description: 'Optional additional arguments to `tailscaled`'
    required: false
    default: ''
  hostname:
    description: 'Fixed hostname to use.'
    required: false
    default: ''
runs:
    using: 'composite'
    steps:
      - name: Check Runner OS
        if: ${{ runner.os != 'Linux' }}
        shell: bash
        run: |
          echo "::error title=⛔ error hint::Support Linux Only"
          exit 1
      - name: Check Auth Key Empty
        if: ${{ inputs.authkey == '' }}
        shell: bash
        run: |
          echo "::error title=⛔ error hint::Auth key empty, Maybe you need to populate it in the Secrets for your workflow, see more in https://docs.github.com/en/actions/security-guides/encrypted-secrets"
          exit 1
      - name: Download Tailscale
        shell: bash
        id: download
        env:
          VERSION: ${{ inputs.version }}
        run: |
          MINOR=$(echo "$VERSION" | awk -F '.' {'print $2'})
          if [ $((MINOR % 2)) -eq 0 ]; then
            URL="https://pkgs.tailscale.com/stable/tailscale_${VERSION}_amd64.tgz"
          else
            URL="https://pkgs.tailscale.com/unstable/tailscale_${VERSION}_amd64.tgz"
          fi
          curl "$URL" -o tailscale.tgz
          tar -C /tmp -xzf tailscale.tgz
          rm tailscale.tgz
          TSPATH=/tmp/tailscale_${VERSION}_amd64
          sudo mv "${TSPATH}/tailscale" "${TSPATH}/tailscaled" /usr/bin
      - name: Start Tailscale Daemon
        shell: bash
        env:
          ADDITIONAL_DAEMON_ARGS: ${{ inputs.tailscaled-args }}
        run: |
          sudo -E tailscaled ${ADDITIONAL_DAEMON_ARGS} 2>~/tailscaled.log &
          # And check that tailscaled came up. The CLI will block for a bit waiting
          # for it. And --json will make it exit with status 0 even if we're logged
          # out (as we will be). Without --json it returns an error if we're not up.
          sudo -E tailscale status --json >/dev/null
      - name: Connect to Tailscale
        shell: bash
        env:
          TAILSCALE_AUTHKEY: ${{ inputs.authkey }}
          ADDITIONAL_ARGS: ${{ inputs.args }}
          HOSTNAME: ${{ inputs.hostname }}
        run: |
          if [ -z "${HOSTNAME}" ]; then
            HOSTNAME="github-$(cat /etc/hostname)"
          fi
          sudo -E tailscale up --authkey ${TAILSCALE_AUTHKEY} --hostname=${HOSTNAME} --accept-routes ${ADDITIONAL_ARGS}
